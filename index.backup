const Discord = require("discord.js");
const axios = require('axios').default;
const Database = require("@replit/database");
const client = new Discord.Client({ intents: ["GUILDS", "GUILD_MESSAGES"] });
const keepAlive = require("./server");

const pr = require("./modules/dopromise");
const dcNotify = require("./modules/notify");
const dcEmbed = require("./modules/embed");
const dcCal = require("./modules/calendar");

const db = new Database();

// Exception: just ignore
process.on('uncaughtException', function(e) {
  console.log(new Date().toUTCString() + ": EXCEPTION FOUND");
});

/*
 * Time interval set
 */
// var currDate = new Date();
// console.log(new Date().toUTCString())
// setTimeout(() => {
//   checkEveryMinute();
// }, (60 - currDate.getSeconds()) * 1000)

// function checkEveryMinute() {
//   const thisIntr = async () => {
//     let thisDate = new Date();
//     console.log(thisDate.toUTCString());
//     if (thisDate.getMinutes() == 59) {
//       // menit ke-59: reset interval supatya tidak offset
//       setTimeout(thisIntr, (60 - thisDate.getSeconds()) * 1000);
//       return;
//     }
//     if (thisDate.getMinutes() == 0) {
//       await pr.do(db.get("notify_list"));
//       var l = pr.get();
//       for (i in pr.get()) {
//         var chn = client.channels.cache.find(ch => ch.id == pr.get()[i]);
//         chn.send({
//           embeds: [dcEmbed.create()]
//         });
//       }
//     }
//     setTimeout(thisIntr, 60000);
//   }
//   thisIntr();
// }

/*
 * Bot config
 */

async function sendEmbed(embed_obj, group_list) {
  await pr.do(db.get(group_list));
  var l = pr.get();
  if (l && l.length > 0 && embed_obj) {
    for (let i in l) {
      client.channels.cache.find(ch => ch.id == l[i]).send({
        embeds: [embed_obj]
      });
    }
  }
}

module.exports = {
  send: async function() {
    await pr.do(db.get("notify_list"));
    var l = pr.get();
    for (i in pr.get()) {
      var chn = client.channels.cache.find(ch => ch.id == pr.get()[i]);
      chn.send({
        embeds: [dcEmbed.create()]
      });
    }
  }
}

client.on("ready", () => {
  console.log("Connected as " + client.user.tag);
})

client.on("messageCreate", (msg) => {
  //console.log(msg.author.bot);
  //let perms = client.guilds.cache.get("881530119989125120").members.cache.find(u => u.id = client.user.id).permissions;
  //let perms = msg.member.permissions
  //console.log(perms.has("MANAGE_ROLES"));
  // Check if a member has a specific permission on the guild!
  // console.log();
  if (msg.author.bot)
    return;

  var mCon = msg.content.split(/(\s+)/).filter(function(value, index, arr) {
    return value.trim() != "";
  });
  let mIns = mCon[1];
  // porsi pertama string content

  if (mCon[0] !== "!hn")
    return;

  if (mIns === "birthday") {
    switch (mCon[2]) {
      case "next":
        var type = mCon[3] !== undefined ? mCon[3] : "current";
        var offset = mCon[4] !== undefined ? Number(mCon[4]) : 0;
        dcCal.getNextBirthday(type, { offset: offset - 1 }).then((res) => {
          msg.channel.send(res);
        });
        break;

      case "next10":
        break;

      default:
        var opt = "**[!] Kesalahan Kueri!**\r\n";
        opt += "Penggunaan: `!hn birthday (tampilkan)[next|next10] (angkatan)[aktif|semua] [...]`\r\n";
        msg.reply(opt);
        break;
    }
    return;
  }

  if (mIns === "embed") {
    msg.channel.send({
      embeds: [dcEmbed.create()]
    });
  }

  if (mIns === "notify") {
    switch (mCon[2]) {
      case "add":
        dcNotify.do("add", msg.channelId).then((e) => {
          if (e[0] == 1)
            msg.channel.send("**[!] Eksekusi Berhasil!**\r\n" + e[1]);
          else if (e[0] == 0)
            msg.channel.send("**[!] Eksekusi Gagal!**\r\n" + e[1]);
        })
        break;

      case "remove":
        dcNotify.do("delete", msg.channelId).then((e) => {
          if (e[0] == 1)
            msg.channel.send("**[!] Eksekusi Berhasil!**\r\n" + e[1]);
          else if (e[0] == 0)
            msg.channel.send("**[!] Eksekusi Gagal!**\r\n" + e[1]);
        })
        break;

      case "status":
        dcNotify.do("check", msg.channelId).then((e) => {
          if (e == 1)
            msg.channel.send("**[!] Notifikasi ulang tahun dan reminder untuk channel ini berstatus AKTIF**");
          if (e == 0)
            msg.channel.send("**[!] Notifikasi ulang tahun dan reminder untuk channel ini berstatus TIDAK AKTIF**");
        })
        break;

      default:
        msg.channel.send("**[!] Error!**\r\nPerintah tidak tepat: gunakan `!hn notify add` atau `!hn notify remove`");
        break;
    }
  }

})

keepAlive();
client.login(process.env['TOKEN']);